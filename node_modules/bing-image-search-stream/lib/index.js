"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _stream = require("stream");

var _bingImageSearchAsyncIterator = _interopRequireDefault(require("bing-image-search-async-iterator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

class BingImageSearchStream extends _stream.Readable {
  constructor(options) {
    super({
      objectMode: true,
      highWaterMark: 1
    });
    this.iterator = (0, _bingImageSearchAsyncIterator.default)(options);

    if (this.iterator == null) {
      throw new Error('failed to create iterator');
    } else if (this.iterator.next !== 'function') {
      throw new Error('iterator is missing next();');
    }

    this.done = false;
  }

  _read() {
    var _this = this;

    return _asyncToGenerator(function* () {
      try {
        const result = yield _this.iterator.next();
        _this.done = result.done;

        _this.push(!_this.done ? result.value : null);
      } catch (err) {
        process.nextTick(() => {
          _this.emit('error', err);
        });
      }
    })();
  }

  _destroy(err, cb) {
    var _this2 = this;

    return _asyncToGenerator(function* () {
      let error = err;

      if (!_this2.done) {
        if (typeof _this2.iterator.return === 'function') {
          try {
            yield _this2.iterator.return();
          } catch (err2) {
            error = err2;
          }
        }
      }

      cb(error);
    })();
  }

}

exports.default = BingImageSearchStream;
module.exports = exports.default;